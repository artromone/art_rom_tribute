const tg = window.Telegram?.WebApp;

if (!tg) {
    console.error('Telegram Web App –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
    document.getElementById('app-info').textContent = '–û—à–∏–±–∫–∞: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ –≤ Telegram';
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if (tg) {
    tg.ready();
    tg.expand();
    
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
    applyTheme();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    setupMainButton();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    initUser();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    showAppInfo();
}

function applyTheme() {
    const theme = tg.colorScheme || 'light';
    document.documentElement.setAttribute('data-theme', theme);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã Telegram
    if (tg.themeParams) {
        const root = document.documentElement;
        Object.entries(tg.themeParams).forEach(([key, value]) => {
            root.style.setProperty(`--tg-theme-${key.replace(/_/g, '-')}`, value);
        });
    }
}

function setupMainButton() {
    tg.MainButton.text = '–ì–æ—Ç–æ–≤–æ ‚úì';
    tg.MainButton.color = tg.themeParams.button_color || '#007AFF';
    tg.MainButton.textColor = tg.themeParams.button_text_color || '#ffffff';
    tg.MainButton.show();
    
    tg.MainButton.onClick(() => {
        tg.sendData(JSON.stringify({
            action: 'main_button_clicked',
            timestamp: Date.now(),
            user_id: tg.initDataUnsafe?.user?.id
        }));
    });
}

function initUser() {
    const user = tg.initDataUnsafe?.user;
    const userNameElement = document.getElementById('user-name');
    const userStatusElement = document.getElementById('user-status');
    const userAvatarElement = document.getElementById('user-avatar');
    
    if (user) {
        userNameElement.textContent = `${user.first_name} ${user.last_name || ''}`.trim();
        userStatusElement.textContent = user.username ? `@${user.username}` : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram';
        userAvatarElement.textContent = user.first_name.charAt(0).toUpperCase();
    } else {
        userNameElement.textContent = '–ì–æ—Å—Ç—å';
        userStatusElement.textContent = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        userAvatarElement.textContent = '?';
    }
}

function showAppInfo() {
    const info = {
        platform: tg.platform,
        version: tg.version,
        colorScheme: tg.colorScheme,
        isExpanded: tg.isExpanded,
        viewportHeight: tg.viewportHeight,
        isClosingConfirmationEnabled: tg.isClosingConfirmationEnabled
    };
    
    document.getElementById('app-info').textContent = JSON.stringify(info, null, 2);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.getElementById('main-button')?.addEventListener('click', () => {
    tg.showAlert('–ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! üéâ', () => {
        tg.HapticFeedback.impactOccurred('medium');
    });
});

document.getElementById('data-button')?.addEventListener('click', () => {
    const data = {
        action: 'data_sent',
        timestamp: Date.now(),
        user_data: tg.initDataUnsafe?.user,
        app_data: {
            platform: tg.platform,
            version: tg.version
        }
    };
    
    tg.sendData(JSON.stringify(data));
    tg.showPopup({
        title: '–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã',
        message: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–µ—Ä–µ–¥–∞–Ω–∞ –±–æ—Ç—É',
        buttons: [{type: 'ok'}]
    });
});

document.getElementById('close-button')?.addEventListener('click', () => {
    tg.showConfirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?', (confirmed) => {
        if (confirmed) {
            tg.close();
        }
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π Telegram
if (tg) {
    tg.onEvent('themeChanged', applyTheme);
    
    tg.onEvent('viewportChanged', () => {
        showAppInfo();
    });
    
    tg.onEvent('mainButtonClicked', () => {
        console.log('Main button clicked via event');
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        if (tg) {
            tg.showPopup({
                title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã',
                message: 'Mini App —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ',
                buttons: [{type: 'ok'}]
            });
        }
    }, 1000);
});
